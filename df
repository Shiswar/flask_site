warning: LF will be replaced by CRLF in flask_web/static/Shiswar's Game Reviews_files/bootstrap.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in flask_web/static/Shiswar's Game Reviews_files/bootstrap.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in flask_web/static/Shiswar's Game Reviews_files/css2.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in flask_web/static/Shiswar's Game Reviews_files/css2_002.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in flask_web/static/Shiswar's Game Reviews_files/css2_003.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in flask_web/static/Shiswar's Game Reviews_files/css2_004.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in flask_web/static/Shiswar's Game Reviews_files/font-awesome.css.
The file will have its original line endings in your working directory
[1mdiff --git a/flask_web/__init__.py b/flask_web/__init__.py[m
[1mindex b35cadc..77f0b4a 100644[m
[1m--- a/flask_web/__init__.py[m
[1m+++ b/flask_web/__init__.py[m
[36m@@ -1,6 +1,7 @@[m
 from flask import Flask[m
 from flask_sqlalchemy import SQLAlchemy[m
[31m-[m
[32m+[m[32mfrom flask_bcrypt import Bcrypt[m
[32m+[m[32mfrom flask_login import LoginManager[m
 [m
 [m
 [m
[36m@@ -8,5 +9,9 @@[m [mapp = Flask(__name__)[m
 app.config['SECRET_KEY'] = '21dd8fa84c247664f09735a21a23ca89'[m
 app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///site.db'[m
 db = SQLAlchemy(app)[m
[32m+[m[32mbcrypt = Bcrypt(app)[m
[32m+[m[32mlogin_manager = LoginManager(app)[m
[32m+[m[32mlogin_manager.login_view = 'login'[m
[32m+[m[32mlogin_manager.login_message_category = 'info'[m
 [m
 from flask_web import routes[m
\ No newline at end of file[m
[1mdiff --git a/flask_web/forms.py b/flask_web/forms.py[m
[1mindex b163f04..6d8c31a 100644[m
[1m--- a/flask_web/forms.py[m
[1m+++ b/flask_web/forms.py[m
[36m@@ -1,6 +1,9 @@[m
 from flask_wtf import FlaskForm[m
[31m-from wtforms import StringField, PasswordField, SubmitField, BooleanField[m
[31m-from wtforms.validators import DataRequired, Length, Email, EqualTo[m
[32m+[m[32mfrom flask_wtf.file import FileField, FileAllowed[m
[32m+[m[32mfrom wtforms import StringField, PasswordField, SubmitField, BooleanField, TextAreaField[m
[32m+[m[32mfrom wtforms.validators import DataRequired, Length, Email, EqualTo, ValidationError[m
[32m+[m[32mfrom flask_web.models import User[m
[32m+[m[32mfrom flask_login import current_user[m
 [m
 class RegistrationForm(FlaskForm):[m
     username = StringField("Enter username", [m
[36m@@ -17,6 +20,15 @@[m [mclass RegistrationForm(FlaskForm):[m
 [m
     submit = SubmitField("Submit")[m
 [m
[32m+[m[32m    def validate_username(self, username):[m
[32m+[m[32m        user = User.query.filter_by(username=username.data).first()[m
[32m+[m[32m        if user:[m
[32m+[m[32m            raise ValidationError('Username is already taken, please try another one.')[m
[32m+[m
[32m+[m[32m    def validate_email(self, email):[m
[32m+[m[32m        user = User.query.filter_by(email=email.data).first()[m
[32m+[m[32m        if user:[m
[32m+[m[32m            raise ValidationError('Email is already registered, log in to your account or user a different email')[m
 [m
 class LoginForm(FlaskForm):[m
     username = StringField("Enter username", [m
[36m@@ -32,3 +44,31 @@[m [mclass LoginForm(FlaskForm):[m
 [m
     submit = SubmitField("Submit")[m
 [m
[32m+[m[32mclass UpdateAccountForm(FlaskForm):[m
[32m+[m[32m    username = StringField("Update username",[m[41m [m
[32m+[m[32m    validators=[DataRequired(), Length(min=2, max=20)])[m
[32m+[m
[32m+[m[32m    email = StringField("Update Email",[m
[32m+[m[32m    validators=[DataRequired(), Email()])[m
[32m+[m
[32m+[m[32m    picture = FileField('Update Profile picture', validators=[FileAllowed(['jpg', 'png'])])[m
[32m+[m
[32m+[m[32m    submit = SubmitField("Submit")[m
[32m+[m
[32m+[m[32m    def validate_username(self, username):[m
[32m+[m[32m        if username.data != current_user.username:[m
[32m+[m[32m            user = User.query.filter_by(username=username.data).first()[m
[32m+[m[32m            if user:[m
[32m+[m[32m                raise ValidationError('Username is already taken, please try another one.')[m
[32m+[m
[32m+[m[32m    def validate_email(self, email):[m
[32m+[m[32m        if email.data != current_user.email:[m
[32m+[m[32m            user = User.query.filter_by(email=email.data).first()[m
[32m+[m[32m            if user:[m
[32m+[m[32m                raise ValidationError('Email is already registered, log in to your account or user a different email')[m
[32m+[m
[32m+[m
[32m+[m[32mclass PostForm(FlaskForm):[m
[32m+[m[32m    title = StringField('Title', validators=[DataRequired()])[m
[32m+[m[32m    content = TextAreaField('Content', validators=[DataRequired()])[m
[32m+[m[32m    submit = SubmitField('Post')[m
\ No newline at end of file[m
[1mdiff --git a/flask_web/models.py b/flask_web/models.py[m
[1mindex d7f402b..4a5328b 100644[m
[1m--- a/flask_web/models.py[m
[1m+++ b/flask_web/models.py[m
[36m@@ -1,7 +1,12 @@[m
[31m-from flask_web import db[m
[32m+[m[32mfrom flask_web import db, login_manager[m
 from datetime import datetime[m
[32m+[m[32mfrom flask_login import UserMixin[m
 [m
[31m-class User(db.Model):[m
[32m+[m[32m@login_manager.user_loader[m
[32m+[m[32mdef load_user(user_id):[m
[32m+[m[32m    return User.query.get(int(user_id))[m
[32m+[m
[32m+[m[32mclass User(db.Model, UserMixin):[m
     id = db.Column(db.Integer, primary_key = True)[m
     username = db.Column(db.String(20), unique=True, nullable = False)[m
     email = db.Column(db.String(120), unique=True, nullable = False)[m
[1mdiff --git a/flask_web/routes.py b/flask_web/routes.py[m
[1mindex 2443576..626216b 100644[m
[1m--- a/flask_web/routes.py[m
[1m+++ b/flask_web/routes.py[m
[36m@@ -1,8 +1,10 @@[m
[31m-from flask import render_template, url_for, flash, redirect[m
[31m-from flask_web.forms import RegistrationForm, LoginForm[m
[32m+[m[32mfrom flask import render_template, url_for, redirect, request, flash[m
[32m+[m[32mfrom flask_web.forms import RegistrationForm, LoginForm, UpdateAccountForm, PostForm[m
 from flask_web.models import User, Post[m
[31m-from flask_web import app[m
[31m-import math, random, requests[m
[32m+[m[32mfrom flask_web import app,db, bcrypt[m
[32m+[m[32mfrom flask_login import login_user, current_user, logout_user, login_required[m
[32m+[m[32mimport math, random, requests, secrets, os[m
[32m+[m[32mfrom PIL import Image[m
 [m
 #           Post template[m
 #   {[m
[36m@@ -21,40 +23,6 @@[m [mimport math, random, requests[m
 [m
 [m
 [m
[31m-posts = [[m
[31m-    {[m
[31m-        'author': 'Shae Iswar',[m
[31m-        'title': 'Call of Duty: Warzone',[m
[31m-        'review': 'Warzone is a really good game that i really love and that is the end of this review....',[m
[31m-        'date': 'September 23 2020',[m
[31m-        'category':'BR',[m
[31m-        'picture':'static/warzone_thumb.jpg'[m
[31m-    },[m
[31m-    {[m
[31m-        'author': 'Shae Iswar',[m
[31m-        'title': 'Destiny 2',[m
[31m-        'review': 'I really like destiny 2 aswell because i pkay with my friends',[m
[31m-        'date': 'September 27 2020',[m
[31m-        'category':'MMORPG, FPS',[m
[31m-        'picture':'static/warzone_thumb.jpg'[m
[31m-    },[m
[31m-    {[m
[31m-        'author': 'Shae Iswar',[m
[31m-        'title': 'Destiny 2',[m
[31m-        'review': 'I really like destiny 2 aswell because i pkay with my friends',[m
[31m-        'date': 'September 27 2020',[m
[31m-        'category':'MMORPG, FPS',[m
[31m-        'picture':'static/warzone_thumb.jpg'[m
[31m-    },[m
[31m-    {[m
[31m-        'author': 'Shae Iswar',[m
[31m-        'title': 'Destiny 2',[m
[31m-        'review': 'I really like destiny 2 aswell because i pkay with my friends',[m
[31m-        'date': 'September 27 2020',[m
[31m-        'category':'MMORPG, FPS',[m
[31m-        'picture':'static/warzone_thumb.jpg'[m
[31m-    }[m
[31m-][m
 [m
 categories = [[m
     {[m
[36m@@ -87,6 +55,7 @@[m [mcategories = [[m
 @app.route("/")[m
 @app.route("/game")[m
 def game():[m
[32m+[m[32m    posts = Post.query.all()[m
     return render_template('game.html', posts=posts, categories=categories)[m
 [m
 @app.route("/home")[m
[36m@@ -95,16 +64,36 @@[m [mdef home():[m
 [m
 @app.route("/register", methods=['GET', 'POST'])[m
 def register():[m
[32m+[m[32m    if current_user.is_authenticated:[m
[32m+[m[32m        return redirect(url_for('game'))[m
     form = RegistrationForm()[m
     if form.validate_on_submit():[m
[31m-        flash(f'Success! An account for {form.username.data} has been created', 'success')[m
[31m-        return redirect(url_for('game'))[m
[32m+[m[32m        hashed_pw = bcrypt.generate_password_hash(form.password.data).decode('utf-8')[m
[32m+[m[32m        user = User(username=form.username.data, email=form.email.data, password=hashed_pw)[m
[32m+[m[32m        db.session.add(user)[m
[32m+[m[32m        db.session.commit()[m
[32m+[m[32m        flash(f'Success! An account for {form.username.data} has been created! You can now log in', 'success')[m
[32m+[m[32m        return redirect(url_for('login'))[m
 [m
     return render_template('register.html', title='Register', form=form)[m
 [m
 @app.route("/login", methods=['GET', 'POST'])[m
 def login():[m
[32m+[m[32m    if current_user.is_authenticated:[m
[32m+[m[32m        return redirect(url_for('game'))[m
     form = LoginForm()[m
[32m+[m[32m    if form.is_submitted():[m
[32m+[m[32m        user = User.query.filter_by(email=form.email.data).first()[m
[32m+[m[32m        if user and bcrypt.check_password_hash(user.password, form.password.data):[m
[32m+[m[32m            login_user(user, remember=form.remember.data)[m
[32m+[m[32m            next_page = request.args.get('next')[m
[32m+[m[41m             [m
[32m+[m[32m            return redirect(next_page) if next_page else redirect(url_for('game'))[m[41m    [m
[32m+[m[32m        elif not user:[m
[32m+[m[32m            flash('Login unsuccessful. Account not found, please register.', 'danger')[m
[32m+[m[32m            print("elif")[m
[32m+[m[32m        else:[m
[32m+[m[32m            flash('Login unsuccessful. Please check your password', 'danger')[m[41m  [m
     return render_template('login.html', title='Login', form= form)[m
 [m
 @app.route("/cv")[m
[36m@@ -114,3 +103,87 @@[m [mdef cv():[m
 @app.route("/contact")[m
 def contact():[m
     return render_template('contact.html')[m
[32m+[m
[32m+[m[32m@app.route("/logout")[m
[32m+[m[32mdef logout():[m
[32m+[m[32m    logout_user()[m
[32m+[m[32m    return redirect(url_for('game'))[m
[32m+[m
[32m+[m[32mdef save_picture(form_picture):[m
[32m+[m[32m    random_hex = secrets.token_hex(8)[m
[32m+[m[32m    _, f_ext = os.path.splitext(form_picture.filename)[m
[32m+[m[32m    picture_fn = random_hex + f_ext[m
[32m+[m[32m    picture_path = os.path.join(app.root_path, 'static/profile_pics', picture_fn)[m
[32m+[m[32m    output_size = (150, 150)[m
[32m+[m
[32m+[m[32m    im = Image.open(form_picture)[m
[32m+[m[32m    im.thumbnail(output_size)[m
[32m+[m
[32m+[m[32m    im.save(picture_path)[m
[32m+[m[32m    return picture_fn[m
[32m+[m
[32m+[m[32m@app.route("/account", methods=['GET', 'POST'])[m
[32m+[m[32m@login_required[m
[32m+[m[32mdef account():[m
[32m+[m[32m    form = UpdateAccountForm()[m
[32m+[m[32m    if form.validate_on_submit():[m
[32m+[m[32m        if form.picture.data:[m
[32m+[m[32m            picture_file = save_picture(form.picture.data)[m
[32m+[m[32m            current_user.image_file = picture_file[m
[32m+[m[32m        current_user.username = form.username.data[m
[32m+[m[32m        current_user.email = form.email.data[m
[32m+[m[32m        db.session.commit()[m
[32m+[m[32m        flash('Your account has been updated', 'success')[m
[32m+[m[32m        return redirect(url_for('account'))[m
[32m+[m[32m    elif request.method == 'GET':[m
[32m+[m[32m        form.username.data = current_user.username[m
[32m+[m[32m        form.email.data = current_user.email[m
[32m+[m[32m    image_file = url_for('static', filename='profile_pics/'+current_user.image_file)[m
[32m+[m[32m    return render_template('account.html', title='Account', image_file = image_file, form=form)[m
[32m+[m
[32m+[m[32m@app.route("/post/new", methods=['GET', 'POST'])[m
[32m+[m[32m@login_required[m
[32m+[m[32mdef new_post():[m
[32m+[m[32m    form = PostForm()[m
[32m+[m[32m    if form.validate_on_submit():[m
[32m+[m[32m        post = Post(title=form.title.data, content=form.content.data, author=current_user)[m
[32m+[m[32m        db.session.add(post)[m
[32m+[m[32m        db.session.commit()[m
[32m+[m
[32m+[m[32m        flash('Post has been created!', 'success')[m
[32m+[m[32m        return redirect(url_for('game'))[m
[32m+[m[32m    return render_template('create_post.html', title='New Post', legend='New Post', form = form)[m
[32m+[m
[32m+[m[32m@app.route("/post/<int:post_id>")[m
[32m+[m[32mdef post(post_id):[m
[32m+[m[32m    post = Post.query.get_or_404(post_id)[m
[32m+[m[32m    return render_template('post.html', title=post.title, post=post)[m
[32m+[m
[32m+[m[32m@app.route("/post/<int:post_id>/update",methods=['GET', 'POST'])[m
[32m+[m[32m@login_required[m
[32m+[m[32mdef update_post(post_id):[m
[32m+[m[32m    post = Post.query.get_or_404(post_id)[m
[32m+[m[32m    if post.author != current_user:[m
[32m+[m[32m        abort(403)[m
[32m+[m[32m    form = PostForm()[m
[32m+[m[32m    if form.validate_on_submit():[m
[32m+[m[32m        post.title = form.title.data[m
[32m+[m[32m        post.content = form.content.data[m
[32m+[m[32m        db.session.commit()[m
[32m+[m[32m        flash('Your post has been updated successfully', 'success')[m
[32m+[m[32m        return redirect(url_for('post', post_id=post.id))[m
[32m+[m[32m    elif request.method == 'GET':[m
[32m+[m[32m        form.title.data = post.title[m
[32m+[m[32m        form.content.data = post.content[m
[32m+[m[32m    return render_template('create_post.html', title='Update Post', legend='Update Post',form = form)[m
[32m+[m
[32m+[m[32m@app.route("/post/<int:post_id>/delete",methods=['POST'])[m
[32m+[m[32m@login_required[m
[32m+[m[32mdef delete_post(post_id):[m
[32m+[m[32m    post = Post.query.get_or_404(post_id)[m
[32m+[m[32m    if post.author != current_user:[m
[32m+[m[32m        abort(403)[m
[32m+[m[32m    db.session.delete(post)[m
[32m+[m[32m    db.session.commit()[m
[32m+[m[32m    flash('Your post has been deleted!', 'success')[m
[32m+[m[32m    return redirect(url_for('game'))[m
\ No newline at end of file[m
[1mdiff --git a/flask_web/site.db b/flask_web/site.db[m
[1mindex ead4e43..fb33470 100644[m
Binary files a/flask_web/site.db and b/flask_web/site.db differ
[1mdiff --git a/flask_web/static/blogstyles.css b/flask_web/static/blogstyles.css[m
[1mindex a0de6b0..bb64511 100644[m
[1m--- a/flask_web/static/blogstyles.css[m
[1m+++ b/flask_web/static/blogstyles.css[m
[36m@@ -112,3 +112,13 @@[m [mh1{[m
     width:100%;[m
 }[m
 [m
[32m+[m[32m.account-img{[m
[32m+[m[32m    max-height:200px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.article-img {[m
[32m+[m[32m    height: 65px;[m
[32m+[m[32m    width: 65px;[m
[32m+[m[32m    margin-right: 16px;[m
[32m+[m[32m    float: left;[m
[32m+[m[32m  }[m
\ No newline at end of file[m
[1mdiff --git a/flask_web/templates/game.html b/flask_web/templates/game.html[m
[1mindex 282e6de..ef4784e 100644[m
[1m--- a/flask_web/templates/game.html[m
[1m+++ b/flask_web/templates/game.html[m
[36m@@ -33,13 +33,13 @@[m
             [m
             {% for post in posts %}[m
 [m
[31m-            <div class="card col-lg-3">[m
[31m-                <img src="{{ post.picture }}" class="card-img-top rounded flex-auto p-1" alt="...">[m
[32m+[m[32m            <div class="col-lg-5">[m
[32m+[m[32m                <img class="rounded-circle article-img" src="{{ url_for('static', filename='profile_pics/' + post.author.image_file) }}">[m
                 <div class="card-body py-0">[m
[31m-                <h5 class="card-title">{{ post.title }}</h5>[m
[31m-                <p><small>{{ post.category }}</small></p>[m
[31m-                <p class="card-text">{{ post.review }}</p>[m
[31m-                <a href="#" class="btn btn-primary">Go somewhere</a>[m
[32m+[m[32m                    <a class="text-muted">{{ post.author.username }}</a>[m
[32m+[m[32m                    <small class="text-muted">{{ post.date_posted.strftime('%Y-%m-%d') }}</small>[m
[32m+[m[32m                    <h5><a  class="article-title" href="{{ url_for('post', post_id=post.id) }}">{{ post.title }}</a></h5>[m
[32m+[m[32m                    <p class="card-text">{{ post.content }}</p>[m
                 </div>[m
             </div>[m
             [m
[36m@@ -47,18 +47,6 @@[m
         [m
         </div>[m
         <div class="row">[m
[31m-            [m
[31m-[m
[31m-        <div class="row container-fluid border border-dark rounded m-0">   [m
[31m-                <div class="col-lg-7">[m
[31m-                    <h1>Game of the week</h1>[m
[31m-                    <p class="post-review" >This is the game of the week panels</p>[m
[31m-                </div>[m
[31m-                <div class="col-lg-3">[m
[31m-                    <img id="warzone-pic"class="rounded flex-auto p-4" src= "{{ url_for('static', filename='warzone_thumb.jpg') }}" >[m
[31m-                </div>[m
[31m-            [m
[31m-        </div>[m
         [m
 [m
     </div>[m
[1mdiff --git a/flask_web/templates/layout.html b/flask_web/templates/layout.html[m
[1mindex 4b05e3a..31afe32 100644[m
[1m--- a/flask_web/templates/layout.html[m
[1m+++ b/flask_web/templates/layout.html[m
[36m@@ -6,8 +6,11 @@[m
         [m
 [m
          <!-- Bootstrap -->[m
[32m+[m[32m         <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>[m
[32m+[m[41m         [m
         <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">[m
         <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV" crossorigin="anonymous"></script>[m
[32m+[m[41m        [m
         <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">[m
 [m
         [m
[36m@@ -30,20 +33,20 @@[m
                     <img src="{{ url_for('static', filename='cat-logo.png') }}" id="logo">[m
                     <a id="nav-title">dick blog</a>[m
                     <div class="collapse navbar-collapse">[m
[31m-                        <ul class= "navbar-nav mr-auto">[m
[31m-                            <li class="nav-item">[m
[31m-                                <a class="nav-link" href="{{ url_for('game') }}">Home</a>[m
[31m-                            </li>[m
[31m-                            <li class="nav-item">[m
[31m-                                <a class="nav-link" href="{{ url_for('login') }}">Log in</a>[m
[31m-                            </li>[m
[31m-                            <li class="nav-item">[m
[31m-                                <a class="nav-link" href="{{ url_for('register') }}">Sign up</a>[m
[31m-                            </li>[m
[31m-[m
[31m-                        </ul>[m
[31m-                    </div>[m
[31m-                </nav>[m
[32m+[m[32m                        <div class="navbar-nav mr-auto">[m
[32m+[m[32m                            <a class="nav-item nav-link" href="{{ url_for('game') }}">Home</a>[m
[32m+[m[41m                            [m
[32m+[m[32m                        </div>[m
[32m+[m[32m                        <div class="navbar-nav">[m
[32m+[m[32m                            {% if current_user.is_authenticated %}[m
[32m+[m[32m                            <a class="nav-item nav-link" href="{{ url_for('new_post') }}">New Post</a>[m
[32m+[m[32m                            <a class="nav-item nav-link" href="{{ url_for('logout') }}">Log out</a>[m
[32m+[m[32m                            <a class="nav-item nav-link" href="{{ url_for('account') }}">Account</a>[m
[32m+[m[32m                            {% else %}[m
[32m+[m[32m                            <a class="nav-item nav-link" href="{{ url_for('login') }}">Login</a>[m
[32m+[m[32m                            <a class="nav-item nav-link" href="{{ url_for('register') }}">Sign up</a>[m
[32m+[m[32m                            {% endif %}[m
[32m+[m[32m                        </div>[m
             </header>[m
         </div>[m
         [m
[1mdiff --git a/flask_web/templates/login.html b/flask_web/templates/login.html[m
[1mindex d4f1c92..e234635 100644[m
[1m--- a/flask_web/templates/login.html[m
[1m+++ b/flask_web/templates/login.html[m
[36m@@ -7,7 +7,7 @@[m
             <fieldset class="form-group">[m
                 <legend class="border-bottom mb-4"><h2>Log in</h2></legend>[m
                 [m
[31m-                <div>[m
[32m+[m[32m                <div class="form-group">[m
                     {{ form.email.label(class="form-control-label") }}[m
 [m
                     {% if form.email.errors %}[m
[36m@@ -21,7 +21,7 @@[m
                         {{ form.email(class="form-control form-control-lg") }}[m
                     {% endif %}[m
                 </div>[m
[31m-                <div>[m
[32m+[m[32m                <div class="form-group">[m
                     {{ form.password.label(class="form-control-label") }}[m
 [m
                     {% if form.password.errors %}[m
[1mdiff --git a/flask_web/templates/register.html b/flask_web/templates/register.html[m
[1mindex 46838f7..0f8a70d 100644[m
[1m--- a/flask_web/templates/register.html[m
[1m+++ b/flask_web/templates/register.html[m
[36m@@ -6,7 +6,7 @@[m
             {{ form.hidden_tag() }}[m
             <fieldset class="form-group">[m
                 <legend class="border-bottom mb-4">Join today</legend>[m
[31m-                <div>[m
[32m+[m[32m                <div class="form-group">[m
                     {{ form.username.label(class="form-control-label") }}[m
 [m
                     {% if form.username.errors %}[m
[36m@@ -20,7 +20,7 @@[m
                         {{ form.username(class="form-control form-control-lg") }}[m
                     {% endif %}          [m
                 </div>[m
[31m-                <div>[m
[32m+[m[32m                <div class="form-group">[m
                     {{ form.email.label(class="form-control-label") }}[m
 [m
                     {% if form.email.errors %}[m
[36m@@ -34,7 +34,7 @@[m
                         {{ form.email(class="form-control form-control-lg") }}[m
                     {% endif %}[m
                 </div>[m
[31m-                <div>[m
[32m+[m[32m                <div class="form-group">[m
                     {{ form.password.label(class="form-control-label") }}[m
 [m
                     {% if form.password.errors %}[m
[36m@@ -49,7 +49,7 @@[m
                     {% endif %}[m
                     [m
                 </div>[m
[31m-                <div>[m
[32m+[m[32m                <div class="form-group">[m
                     {{ form.confirm_password.label(class="form-control-label") }}[m
 [m
                     {% if form.confirm_password.errors %}[m
